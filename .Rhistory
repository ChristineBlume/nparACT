install.packages(nparACT)
install.packages("nparACT")
load("nparACT")
load(nparACT)
library("nparACT")
data <- read.csv2("C:/Users/chris/Downloads/data01_only_medi.csv", dec = ".", sep = ",", header = F)
data$V2 <- round(data$V2, digits = 0)
data$V1 <- as.POSIXct(data$V1)
plot(data$V1, data$V2)
View(data)
nparACT_base(data, SR = 1/10, cutoff = 1, plot = T, fulldays = F)
nparACT_base("data", SR = 1/10, cutoff = 1, plot = T, fulldays = F)
data <- read.csv(C:/users/chris/Downloads/challenge.csv)
data <- read.csv("C:/users/chris/Downloads/challenge.csv)
data <- read.csv("C:/users/chris/Downloads/challenge.csv")
View(data)
require(rstanarm)
library(rstanarm)
install.packages("rstanarm")
library(rstanarm)
View(data)
f <- y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10
f <- "y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10"
m <- stan_glm(
formula = f,
data = data,
prior = normal(0,1)
)
summary(m)
posterior <- as.data.frame(m)
View(posterior)
dim(posterior)
load("C:/Users/chris/switchdrive/Institution/1 Forschung/05 Proposals/15 Consolidator/result_sim.RData")
View(result)
result[101,k] <- sum(result[,k] >=10)
for (k in 1:ncol(result)){
result[101,k] <- sum(result[,k] >=10)
}
k = 1
sum(result[,k] >=10)
result[,k] >=10
result[1:100,k] >=10
for (k in 1:ncol(result)){
result[101,k] <- sum(result[1:100,k] >=10)
}
result[101,13]
result[101,1]
load("C:/Users/chris/switchdrive/Institution/1 Forschung/05 Proposals/15 Consolidator/result_sim.RData")
View(result)
write.csv2(result, "C:/Users/chris/switchdrive/Institution/1 Forschung/05 Proposals/15 Consolidator/results_SleepDur.csv", quote = F, dec = ".")
(0.0036+0.0052+0.0042+0.0023)/4
sqrt((0.0006^2)*2+0.0007^2+0.0023^2)
(0.0006^2)*2
0.0007^2
(0.0006^2)*2+0.0007^2+0.0023^2
sqrt(6.5e-06)
sqrt((0.0006^2)*2+0.0007^2+0.0023^2)
sqrt(((0.0006^2)*2+0.0007^2+0.0023^2)/4)
install.packages("mediation")
citation("mediation")
Fval = 5.995
df_effect = 1
df_error = 31
(Fval*df_effect)/(F*df_effect+df_error)
(Fval*df_effect)/((F*df_effect)+df_error)
#----- use pacman function p_load to check all packages that you are using in this script
pacman::p_load(BayesFactor, ggplot2, viridis, lme4, simr, MASS, future, future.apply, reshape2, WebPower)
# small-medium effect
wp.rmanova(ng = 1, nm = 3, f = 0.175, nscor = 2,
alpha = 0.05, power = 0.8, type = 1)
# large effect
wp.rmanova(ng = 2, nm = 3, f = 0.4, nscor = 1,
alpha = 0.05, power = 0.8, type = 1)
# large effect
wp.rmanova(ng = 2, nm = 3, f = 0.5, nscor = 1,
alpha = 0.05, power = 0.8, type = 1)
# large effect
wp.rmanova(ng = 2, nm = 3, f = 0.41, nscor = 1,
alpha = 0.05, power = 0.8, type = 1)
# large effect
wp.rmanova(ng = 2, nm = 3, f = 0.42, nscor = 1,
alpha = 0.05, power = 0.8, type = 1)
# large effect
wp.rmanova(ng = 2, nm = 3, f = 0.415, nscor = 1,
alpha = 0.05, power = 0.8, type = 1)
# large effect
wp.rmanova(ng = 2, nm = 3, f = 0.41, nscor = 1,
alpha = 0.05, power = 0.8, type = 1)
# large effect
wp.rmanova(ng = 2, nm = 3, f = 0.42, nscor = 1,
alpha = 0.05, power = 0.8, type = 1)
# large effect
wp.rmanova(ng = 2, nm = 3, f = 0.43, nscor = 1,
alpha = 0.05, power = 0.8, type = 1)
# large effect
wp.rmanova(ng = 2, nm = 3, f = 0.44, nscor = 1,
alpha = 0.05, power = 0.8, type = 1)
# large effect
wp.rmanova(ng = 2, nm = 3, f = 0.485, nscor = 1,
alpha = 0.05, power = 0.8, type = 1)
# Kocevska et al. (2021): mean 90% +/- 10% => small effect = -3%; medium effect = -5%; large effect = -8%
# small-medium effect
wp.rmanova(ng = 1, nm = 3, f = 0.175, nscor = 1,
alpha = 0.05, power = 0.8, type = 1)
Fval = 15.98
df_effect = 1
df_error = 39
(Fval*df_effect)/((F*df_effect)+df_error)
# result: 0.19
## ---------------------------------------------------------------------------
## ------- Bayesian Mixed Linear Models
source("C:/Users/chris/OneDrive/Documents/GitHub/Twilight/BFA_interpret.R")
View(BFA_interpret)
### ----------------------------------------------------------------------------------
### ----------------------------------------------------------------------------------
## ------- Bayesian Mixed Linear Models
source("C:/Users/chris/OneDrive/Documents/GitHub/Twilight/BFA_interpret.R")
View(BFA_interpret)
rm(list = ls())
setwd("C:/Users/chris/OneDrive/Documents/GitHub/nparACT")
#----- check if pacman is installed - if not install it
if(!require(pacman)) install.packages("pacman")
#----- use pacman function p_load to check all packages that you are using in this script
pacman::p_load(roxygen2, devtools, testthat, stringr, git2r, usethis, Rdpack, knitr, rmarkdown, curl, httr, revdepcheck, rhub)
gitcreds::gitcreds_set()
rhub::rhub_setup()
rhub::rhub_doctor()
# check r_hub
rhub::rhub_check()
revdepcheck::revdep_check(pkg = getwd()) #241120 - did not work (Installing CRAN version of SleepCycles
rm(list = ls())
setwd("C:/Users/chris/OneDrive/Documents/GitHub/nparACT")
#----- check if pacman is installed - if not install it
if(!require(pacman)) install.packages("pacman")
#----- use pacman function p_load to check all packages that you are using in this script
pacman::p_load(roxygen2, devtools, testthat, stringr, git2r, usethis, Rdpack, knitr, rmarkdown, curl, httr, rhub)
# check downstream dependencies
revdep_check_save_summary(pkg = "nparACT")
pak::pkg_install("r-lib/revdepcheck")
# check downstream dependencies
revdep_check_save_summary(pkg = "nparACT")
# check downstream dependencies
library(revdepcheck)
rm(list = ls())
setwd("C:/Users/chris/OneDrive/Documents/GitHub/nparACT")
revdep_check(num_workers = 4)
revdep_check(
pkg = "C:/Users/chris/OneDrive/Documents/GitHub/nparACT",
dependencies = c("Depends", "Imports", "Suggests", "LinkingTo"),
quiet = TRUE,
timeout = as.difftime(10, units = "mins"),
num_workers = 1,
bioc = TRUE,
cran = TRUE,
env = revdep_env_vars()
)
# update cran-comments.md (make sure to update, but not overwrite)
usethis::use_cran_comments(open = rlang::is_interactive())
# release package to CRAN
devtools::spell_check()
devtools::release()
2
devtools::release()
devtools::release()
install.packages("devtools")
